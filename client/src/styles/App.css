
.ColumnsSelector {
	font-size: 15px;
	max-height: min(calc(100vh - 16px), 760px);
	max-width: calc(100vw - 16px);
	overflow: auto;
	writing-mode: vertical-lr;
	display: flex;
	flex-flow: row wrap;
	gap: 2px;
	row-gap: 8px;
}

.ColumnsSelector > * {
	writing-mode: horizontal-tb;
	text-align: left;
	min-height: 1.5em;
	max-width: 12em;
}

.ColumnsSelector > div {
	display: flex;
	align-items: center;
}

.GenericsControls {
	display: flex;
	align-items: flex-start !important;
	flex-direction: column;
	border-left: 1px var(--color-border) solid;
	font-size: 14px;
	min-width: min-content;
	min-height: 20em;
	gap: 4px;
	margin-left: 4px;
	padding: 1em 0;
}

.GenericsControls > * {
	min-width: 16em;
	display: flex;
	justify-content: right;
	align-items: center;
}

.GenericsControls select {
	width: 11em;
	margin-left: 4px;
}

.ContextMenu {
	z-index: 5;
	width: max-content;
	position: fixed;
	padding: 8px;
	background-color: var(--color-bg);
	border: 1px var(--color-border) solid;
}

.ContextMenu > * {
	width: 100%;
	text-align: left;
	display: block;
}

.ContextMenu .Group {
	display: flex;
	flex-direction: column;
	text-align: right;
	gap: 4px;
}

.ContextMenu .Row {
	display: flex;
	justify-content: right;
	gap: 8px;
}

.ContextMenu button, .ContextMenu input, .TextButton {
	border: none;
	padding: 1px 0 1px 0;
}

.ContextMenu label {
	user-select: none;
	cursor: pointer;
}

.ContextMenu > button:hover, .ContextMenu label:hover, .TextButton:hover {
	color: var(--color-active) !important;
	text-decoration: underline;
}

div.separator {
	background-color: var(--color-border);
	margin: 4px 0 4px 0;
	height: 1px;
}

.AppNav {
	border-top: 1px var(--color-border) solid;
	height: 24px;
	display: flex;
	gap: 8;
	color: var(--color-text-dark);
	font-size: 14px;
	user-select: none;
}

:is(.AppNav > div) + :is(.AppNav > div) {
	border-left: 1px var(--color-border) solid;
}

.AppNav > div {
	padding: 2px;
}

.AppNav select {
	border: none;
	padding: 0;
}

.AppNav select:hover {
	color: var(--color-active);
	text-decoration: underline;
}

button, select {
	text-align: center;
	border: 1px var(--color-border) solid;
}

input:not([type='checkbox']), label > select, select.Borderless {
	text-align: center;
	background-color: var(--color-input-bg);
	border: 1px transparent solid;
}

input:not([type='checkbox']):disabled, label > select:disabled, label > select.Borderless:disabled {
	opacity: .7;
}

label > select, select.Borderless {
	border: 1px transparent solid;
}

label:has(input[type='checkbox']):hover {
	cursor: pointer;
	color: var(--color-active);
	text-decoration: underline;
}

input:focus-visible, button:focus-visible, select:focus-visible {
	border-color: var(--color-active);
}

input:disabled, button:disabled, select:disabled {
	color: var(--color-text-dark);
}

button:hover:enabled, select:hover:enabled {
	border-color: var(--color-active) !important;
}

.w-color-sketch {
	--sketch-box-shadow: none !important;
	--sketch-background: var(--color-bg) !important;
	border-radius: 0 !important;
}

.w-color-interactive {
	border-radius: 0 !important;
	--sketch-alpha-box-shadow: var(--color-grid) 0px 0px 0px 1px inset !important;
}

.w-color-editable-input {
	--editable-input-color: var(--color-text) !important;
	--editable-input-label-color: var(--color-text) !important;
	--editable-input-box-shadow: var(--color-border) 0px 0px 0px 1px inset !important;
}

.w-color-swatch {
	--sketch-swatch-box-shadow: var(--color-grid) 0px 0px 0px 1px inset !important;
	--sketch-swatch-border-top: 1px solid var(--color-border) !important;
}

.w-color-swatch > * {
	border-radius: 0 !important;
}